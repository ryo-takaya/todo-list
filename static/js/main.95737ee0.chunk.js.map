{"version":3,"sources":["components/Atoms/Title.jsx","components/Atoms/InputField.jsx","components/Atoms/CheckBox.jsx","components/Atoms/DeleteButton.jsx","components/Atoms/Label.jsx","components/Molecules/TaskItem.jsx","components/Molecules/Footer.jsx","components/Organisms/MainContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["Title","styled","h1","Index","Input","input","attrs","props","placeholder","defaultValue","fieldFlag","text","css","setTaskItem","taskItems","setFieldFlag","taskId","onKeyUp","e","currentTarget","value","keyCode","newObj","newTaskItems","map","obj","localStorage","setItem","JSON","stringify","shortid","generate","concat","checked","createTask","CheckBox","type","defaultChecked","checkedFlag","id","Label","label","htmlFor","Container","div","InputBox","useRef","createNewTaskItems","flag","ref","onClick","current","handleClick","DeleteButton","StickTop","span","StickBottom","reduce","newArray","item","i","push","deleteItem","DeleteBox","Div","margin","index","useState","InputField","onDoubleClick","P","pointer","taskItem","deleteItems","leftItems","filter","Li","li","useEffect","initTaskItems","parse","getItem","taskArray","key","TaskItem","length","Footer","App","MainContainer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.95737ee0.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Title = styled.h1`\n  font-weight: 100;\n  color: rgba(175, 47, 47, 0.15);\n  text-align: center;\n  padding: 10px;\n  font-size: 100px;\n`;\n\nconst Index = () => {\n  return <Title>todos</Title>;\n};\n\nexport default Index;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport shortid from \"shortid\";\n\nconst Input = styled.input.attrs((props) => ({\n  placeholder: \"What needs to be done?\",\n  defaultValue: props.fieldFlag ? props.text : \"\",\n}))`\n  display: block;\n  padding: 16px 0px;\n  padding-right: 16px;\n  padding-left: ${(props) => (props.fieldFlag ? \"10px\" : \"60px\")};\n  width: 100%;\n  border: none;\n  box-shadow: inset 0 -2px 1px rgba(0, 0, 0, 0.03);\n  font-size: inherit;\n  font-weight: 100;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  ${(props) =>\n    props.fieldFlag &&\n    css`\n      border: solid 1px black;\n      box-shadow: inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2);\n    `}\n  ::placeholder {\n    color: #d9d9d9;\n  }\n`;\n\nconst Index = ({\n  setTaskItem,\n  fieldFlag,\n  taskItems,\n  text,\n  setFieldFlag,\n  taskId,\n}) => {\n  const createTask = (e) => {\n    if (!e.currentTarget.value) return;\n\n    if (fieldFlag && e.keyCode === 13) {\n      const text = e.currentTarget.value;\n      const newObj = { text, taskId };\n      const newTaskItems = taskItems.map((obj) => {\n        return obj.taskId === taskId ? newObj : obj;\n      });\n      localStorage.setItem(\"taskItems\", JSON.stringify(newTaskItems));\n      setFieldFlag(false);\n      setTaskItem(newTaskItems);\n    } else if (e.keyCode === 13) {\n      const text = e.currentTarget.value;\n      e.currentTarget.value = \"\";\n      const taskId = shortid.generate();\n      const newTaskItems = taskItems.concat({ text, taskId, checked: false });\n      localStorage.setItem(\"taskItems\", JSON.stringify(newTaskItems));\n      setTaskItem(newTaskItems);\n    }\n  };\n\n  return (\n    <Input text={text} fieldFlag={fieldFlag} onKeyUp={(e) => createTask(e)} />\n  );\n};\n\nexport default Index;\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport shortid from \"shortid\";\n\nconst CheckBox = styled.input.attrs((props) => ({\n  type: \"checkbox\",\n  defaultChecked: props.checkedFlag ? \"checked\" : \"\",\n  id: props.id,\n}))`\n  display: none;\n  :checked + label::after {\n    content: \"\";\n    width: 15px;\n    height: 4px;\n    position: absolute;\n    transform: translateY(9px) translateX(5px) rotate(-52deg);\n    border-bottom: 2px solid;\n    border-left: 2px solid;\n    border-color: #55d997;\n  }\n  :checked + label::before {\n    border: 1px solid #55d997;\n  }\n`;\nconst Label = styled.label.attrs((props) => ({\n  htmlFor: props.htmlFor,\n}))`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  border-radius: 50%;\n  &::before {\n    cursor: pointer;\n    content: \"\";\n    display: block;\n    position: absolute;\n    width: 25px;\n    height: 25px;\n    border: 1px solid #d9d9d9;\n    border-radius: 50%;\n  }\n`;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  width: 10%;\n`;\nconst InputBox = styled.div`\n  position: relative;\n  width: 50%;\n  height: 23px;\n`;\n\nconst Index = ({ taskId, checked, setTaskItem, taskItems }) => {\n  const input = useRef();\n  const id = shortid.generate();\n\n  const createNewTaskItems = (flag) => {\n    return taskItems.map((obj) => {\n      if (obj.taskId === taskId) {\n        obj.checked = flag;\n      }\n      return obj;\n    });\n  };\n\n  const handleClick = () => {\n    const flag = input.current.checked;\n\n    if (flag) {\n      const newTaskItems = createNewTaskItems(false);\n      setTaskItem(newTaskItems);\n\n      localStorage.setItem(\"taskItems\", JSON.stringify(newTaskItems));\n    } else {\n      const newTaskItems = createNewTaskItems(true);\n      setTaskItem(newTaskItems);\n\n      localStorage.setItem(\"taskItems\", JSON.stringify(newTaskItems));\n    }\n  };\n  return (\n    <Container>\n      <InputBox>\n        <CheckBox checkedFlag={checked} ref={input} id={id} />\n        <Label onClick={() => handleClick()} htmlFor={id} />\n      </InputBox>\n    </Container>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 53px;\n  position: relative;\n  bottom: 0;\n`;\n\nconst DeleteButton = styled.div`\n  width: 80%;\n  height: 40px;\n  position: absolute;\n  left: 0;\n`;\n\nconst StickTop = styled.span`\n  display: inline-block;\n  height: 1px;\n  border-radius: 5px;\n  background: #cc9a9a;\n  width: 20px;\n  transform: translateX(10px) rotate(-45deg);\n  transition: all 0.2s;\n  z-index: 3;\n  ${DeleteButton}:hover & {\n    background: red;\n  }\n`;\n\nconst StickBottom = styled(StickTop)`\n  transform: translateX(-10px) rotate(45deg);\n`;\n\nconst Index = ({ setTaskItem, taskItems, taskId }) => {\n  const deleteItem = () => {\n    const newTaskItems = taskItems.reduce((newArray, item, i) => {\n      if (item.taskId !== taskId) {\n        newArray.push(item);\n      }\n      return newArray;\n    }, []);\n\n    localStorage.setItem(\"taskItems\", JSON.stringify(newTaskItems));\n    setTaskItem(newTaskItems);\n  };\n  return (\n    <Container>\n      <DeleteButton onClick={() => deleteItem()}>\n        <StickTop />\n        <StickBottom />\n      </DeleteButton>\n    </Container>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Label = styled.div`\n  padding: 16px 16px 16px 10px;\n  width: 100%;\n  position: relative;\n  border: none;\n  word-wrap: break-word;\n  transition: all 0.4s;\n  ${(props) =>\n    props.checkedFlag &&\n    css`\n      color: #d9d9d9;\n      text-decoration: line-through;\n    `}\n`;\n\nconst Index = ({ text, checked }) => {\n  return <Label checkedFlag={checked}>{text}</Label>;\n};\n\nexport default Index;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport CheckBox from \"../Atoms/CheckBox\";\nimport DeleteButton from \"../Atoms/DeleteButton\";\nimport InputField from \"../Atoms/InputField\";\nimport Label from \"../Atoms/Label\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  position: relative;\n  margin-bottom: 1px;\n  background-color: white;\n  z-index: 1;\n`;\n\nconst DeleteBox = styled.div`\n  width: 10%;\n  height: 53px;\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  z-index: 9;\n  display: none;\n  ${Container}:hover & {\n    display: block;\n  }\n`;\n\nconst Div = styled.div`\n  width: 90%;\n  margin-left: ${(props) => (props.margin ? \"10%\" : \"0\")};\n`;\n\nconst Index = ({ text, index, checked, setTaskItem, taskItems, taskId }) => {\n  const [fieldFlag, setFieldFlag] = useState(false);\n\n  const handelDoubleClick = () => {\n    setFieldFlag(!fieldFlag);\n  };\n  return (\n    <Container>\n      {fieldFlag ? (\n        <Div margin>\n          <InputField\n            fieldFlag={fieldFlag}\n            text={text}\n            setFieldFlag={setFieldFlag}\n            setTaskItem={setTaskItem}\n            taskItems={taskItems}\n            taskId={taskId}\n          />\n        </Div>\n      ) : (\n        <>\n          <CheckBox\n            checked={checked}\n            setTaskItem={setTaskItem}\n            taskItems={taskItems}\n            taskId={taskId}\n          />\n          <Div onDoubleClick={() => handelDoubleClick()}>\n            <Label text={text} checked={checked} taskId={taskId} />\n          </Div>\n\n          <DeleteBox>\n            <DeleteButton\n              taskItems={taskItems}\n              index={index}\n              taskId={taskId}\n              setTaskItem={setTaskItem}\n            />\n          </DeleteBox>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  background-color: white;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2), 0 8px 0 -3px #f6f6f6, 0 9px 1px -3px rgba(0, 0, 0, 0.2), 0 16px 0 -6px #f6f6f6, 0 17px 2px -6px rgba(0, 0, 0, 0.2);\n  margin-bottom:90px;\n}\n`;\n\nconst P = styled.div`\n  font-size: 15px;\n  padding: 10px;\n  color: #4d4d4d;\n  cursor: ${(props) => (props.pointer ? `pointer` : `default`)};\n`;\n\nconst Index = ({ taskItems, setTaskItem }) => {\n  const { leftItems, deleteItems } = taskItems.reduce(\n    (obj, taskItem) => {\n      if (taskItem.checked) {\n        obj.deleteItems++;\n      } else {\n        obj.leftItems++;\n      }\n      return obj;\n    },\n    { leftItems: 0, deleteItems: 0 }\n  );\n\n  const handleClick = () => {\n    const newTaskItems = taskItems.filter((obj) => !obj.checked);\n    localStorage.setItem(\"taskItems\", JSON.stringify(newTaskItems.concat()));\n    setTaskItem(newTaskItems);\n  };\n\n  return (\n    <Container>\n      <P>{`${leftItems} items left`}</P>\n      {!!deleteItems && (\n        <P pointer onClick={() => handleClick()}>\n          clear completed\n        </P>\n      )}\n    </Container>\n  );\n};\n\nexport default Index;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport InputField from \"../Atoms/InputField\";\nimport TaskItem from \"../Molecules/TaskItem\";\nimport Footer from \"../Molecules/Footer\";\n\nconst Container = styled.div`\n  max-width: 550px;\n  min-width: 250px;\n  margin: 0 auto;\n  font: 24px \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-weight: 100;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 25px 50px 0 rgba(0, 0, 0, 0.1);\n`;\n\nconst Li = styled.li`\n  list-style: none;\n`;\n\nconst Index = () => {\n  const [taskItems, setTaskItem] = useState([]);\n\n  useEffect(() => {\n    const initTaskItems = JSON.parse(localStorage.getItem(\"taskItems\"));\n    if (initTaskItems !== null) {\n      setTaskItem(initTaskItems);\n    }\n  }, []);\n\n  const taskArray = taskItems.map((obj, i) => {\n    return (\n      <Li key={`${i}${JSON.stringify(obj)}`}>\n        <TaskItem\n          text={obj.text}\n          index={i}\n          taskId={obj.taskId}\n          checked={obj.checked}\n          setTaskItem={setTaskItem}\n          taskItems={taskItems}\n        />\n      </Li>\n    );\n  });\n\n  return (\n    <Container>\n      <InputField taskItems={taskItems} setTaskItem={setTaskItem} />\n      <ul>{taskArray}</ul>\n      {!!taskItems.length && (\n        <Footer taskItems={taskItems} setTaskItem={setTaskItem} />\n      )}\n    </Container>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\nimport \"./App.css\";\nimport Title from \"./components/Atoms/Title\";\nimport MainContainer from \"./components/Organisms/MainContainer\";\n\nfunction App() {\n  return (\n    <div>\n      <Title />\n      <MainContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}