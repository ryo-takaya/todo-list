{"version":3,"sources":["components/Atoms/Title.jsx","components/Atoms/InputField.jsx","components/Atoms/CheckBox.jsx","components/Atoms/DeleteButton.jsx","components/Atoms/Label.jsx","components/Molecules/TaskItem.jsx","components/Atoms/Footer.jsx","components/Organisms/MainContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["Title","styled","h1","Index","Input","input","attrs","props","placeholder","defaultValue","fieldFlag","text","setTaskItem","taskItems","setFieldFlag","taskId","onKeyUp","e","currentTarget","value","keyCode","newObj","newArray","map","obj","console","log","shortid","generate","createTask","CheckBox","type","defaultChecked","checkedFlag","id","Label","label","htmlFor","Container","div","InputBox","setCheckedFlag","checkedArray","setCheckedArray","checked","useRef","ref","onClick","current","i","indexOf","splice","concat","click","DeleteButton","StickTop","span","StickBottom","index","newCheckedArray","num","newTaskItemsArray","deleteItem","css","DeleteBox","Div","useState","hoverFlag","sethoverFlag","labelText","setLabelText","changeHoverFlag","onMouseEnter","onMouseLeave","InputField","onDoubleClick","P","pointer","taskArray","length","result","filter","includes","deleteItems","Li","li","flag","key","JSON","stringify","TaskItem","object","Footer","App","MainContainer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aa62c98f.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Title = styled.h1`\n  font-weight: 100;\n  color: rgba(175, 47, 47, 0.15);\n  text-align: center;\n  padding: 10px;\n  font-size: 100px;\n`;\n\nconst Index = () => {\n  return <Title>todos</Title>;\n};\n\nexport default Index;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport shortid from \"shortid\";\n\nconst Input = styled.input.attrs((props) => ({\n  placeholder: \"What needs to be done?\",\n  defaultValue: props.fieldFlag ? props.text : \"\",\n}))`\n  display: block;\n  padding: 16px 0px;\n  padding-right: 16px;\n  padding-left: ${(props) => (props.fieldFlag ? \"40px\" : \"60px\")};\n  width: 100%;\n  border: none;\n  box-shadow: inset 0 -2px 1px rgba(0, 0, 0, 0.03);\n  font-size: inherit;\n  font-weight: 100;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  ::placeholder {\n    color: #d9d9d9;\n  }\n`;\n\nconst Index = ({\n  setTaskItem,\n  fieldFlag,\n  taskItems,\n  text,\n  setFieldFlag,\n  taskId,\n}) => {\n  const createTask = (e) => {\n    if (!e.currentTarget.value) return;\n\n    if (fieldFlag && e.keyCode === 13) {\n      const text = e.currentTarget.value;\n      const newObj = { text, taskId };\n      const newArray = taskItems.map((obj) => {\n        console.log(taskId);\n        console.log(obj.taskId === taskId);\n        return obj.taskId === taskId ? newObj : obj;\n      });\n\n      setFieldFlag(false);\n      setTaskItem(newArray);\n    } else if (e.keyCode === 13) {\n      const text = e.currentTarget.value;\n      e.currentTarget.value = \"\";\n      const taskId = shortid.generate();\n      setTaskItem({ text, taskId });\n    }\n  };\n\n  return (\n    <Input text={text} fieldFlag={fieldFlag} onKeyUp={(e) => createTask(e)} />\n  );\n};\n\nexport default Index;\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport shortid from \"shortid\";\n\nconst CheckBox = styled.input.attrs((props) => ({\n  type: \"checkbox\",\n  defaultChecked: props.checkedFlag ? \"checked\" : \"\",\n  id: props.id,\n}))`\n  display: none;\n  :checked + label::after {\n    content: \"\";\n    width: 15px;\n    height: 4px;\n    position: absolute;\n    transform: translateY(9px) translateX(5px) rotate(-52deg);\n\n    border-bottom: 2px solid;\n    border-left: 2px solid;\n    border-color: #585753;\n  }\n`;\nconst Label = styled.label.attrs((props) => ({\n  htmlFor: props.htmlFor,\n}))`\n  display: inline-block;\n  position: absolute;\n  width: 23px;\n  height: 23px;\n  border-radius: 50%;\n  &::before {\n    cursor: pointer;\n    content: \"\";\n    display: block;\n    position: absolute;\n    width: 25px;\n    height: 25px;\n    border: 1px solid #999;\n    border-radius: 50%;\n  }\n`;\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  width: 10%;\n`;\nconst InputBox = styled.div`\n  position: relative;\n  width: 50%;\n  height: 23px;\n`;\n\nconst Index = ({\n  setCheckedFlag,\n  checkedArray,\n  setCheckedArray,\n  checked,\n  taskId,\n}) => {\n  const input = useRef(false);\n  const id = shortid.generate();\n\n  const click = (e) => {\n    const flag = input.current.checked;\n\n    if (flag) {\n      console.log(\"checked\", taskId);\n      const i = checkedArray.indexOf(taskId);\n      checkedArray.splice(i, 1);\n      setCheckedFlag(false);\n      setCheckedArray(checkedArray.concat());\n    } else {\n      console.log(\"checked\", taskId);\n      setCheckedFlag(true);\n      setCheckedArray(checkedArray.concat(taskId));\n    }\n    //改善できる\n  };\n  return (\n    <Container>\n      <InputBox>\n        <CheckBox checkedFlag={checked} ref={input} id={id} />\n        <Label onClick={(e) => click(e)} htmlFor={id} />\n      </InputBox>\n    </Container>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 53px;\n  position: relative;\n  bottom: 0;\n`;\n\nconst DeleteButton = styled.div`\n  width: 80%;\n  height: 40px;\n  position: absolute;\n  left: 0;\n`;\n\nconst StickTop = styled.span`\n  display: inline-block;\n  height: 1px;\n  border-radius: 5px;\n  background: #cc9a9a;\n  width: 20px;\n  transform: translateX(10px) rotate(-45deg);\n  transition: all 0.2s;\n  z-index: 3;\n  ${DeleteButton}:hover & {\n    background: red;\n  }\n`;\n\nconst StickBottom = styled(StickTop)`\n  transform: translateX(-10px) rotate(45deg);\n`;\n\nconst Index = ({\n  index,\n  setTaskItem,\n  taskItems,\n  setCheckedArray,\n  checkedArray,\n  taskId,\n}) => {\n  const deleteItem = () => {\n    const newCheckedArray = checkedArray.concat();\n    const num = checkedArray.indexOf(taskId);\n\n    const newTaskItemsArray = taskItems.concat();\n    newTaskItemsArray.splice(index, 1);\n    newCheckedArray.splice(num, 1);\n    setTaskItem(newTaskItemsArray);\n    if (num !== -1) {\n      setCheckedArray(newCheckedArray);\n    }\n  };\n  return (\n    <Container>\n      <DeleteButton onClick={() => deleteItem()}>\n        <StickTop />\n        <StickBottom />\n      </DeleteButton>\n    </Container>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Label = styled.div`\n  padding: 16px 16px 16px 20px;\n  width: 100%;\n  position: relative;\n  border: none;\n  word-wrap: break-word;\n  transition: all 0.4s;\n  ${(props) =>\n    props.checkedFlag &&\n    css`\n      color: #d9d9d9;\n      text-decoration: line-through;\n    `}\n`;\n\nconst CenterLine = styled.div`\n  border-bottom: solid 1px #d9d9d9;\n`;\n\nconst Index = ({ text, checkedFlag }) => {\n  return <Label checkedFlag={checkedFlag}>{text}</Label>;\n};\n\nexport default Index;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport CheckBox from \"../Atoms/CheckBox\";\nimport DeleteButton from \"../Atoms/DeleteButton\";\nimport InputField from \"../Atoms/InputField\";\nimport Label from \"../Atoms/Label\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  position: relative;\n  margin-bottom: 1px;\n  background-color: white;\n  z-index: 1;\n`;\n\nconst DeleteBox = styled.div`\n  width: 10%;\n  height: 53px;\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  z-index: 9;\n`;\n\nconst Div = styled.div`\n  width: 90%;\n`;\n\nconst Index = ({\n  text,\n  index,\n  checked,\n  checkedArray,\n  setCheckedArray,\n  setTaskItem,\n  taskItems,\n  taskId,\n}) => {\n  const [fieldFlag, setFieldFlag] = useState(false);\n  const [hoverFlag, sethoverFlag] = useState(false);\n  const [labelText, setLabelText] = useState(text);\n  const [checkedFlag, setCheckedFlag] = useState(checked);\n\n  const changeHoverFlag = () => {\n    sethoverFlag(!hoverFlag);\n  };\n\n  const changeField = () => {\n    setFieldFlag(!fieldFlag);\n  };\n  return (\n    <Container\n      onMouseEnter={() => {\n        changeHoverFlag();\n      }}\n      onMouseLeave={() => {\n        changeHoverFlag();\n      }}\n    >\n      <CheckBox\n        checked={checked}\n        index={index}\n        taskId={taskId}\n        setCheckedFlag={setCheckedFlag}\n        checkedArray={checkedArray}\n        setCheckedArray={setCheckedArray}\n      />\n      {fieldFlag ? (\n        <InputField\n          fieldFlag={fieldFlag}\n          setLabelText={setLabelText}\n          text={labelText}\n          setFieldFlag={setFieldFlag}\n          setTaskItem={setTaskItem}\n          taskItems={taskItems}\n          taskId={taskId}\n        />\n      ) : (\n        <Div onDoubleClick={() => changeField()}>\n          <Label text={labelText} checkedFlag={checked} taskId={taskId} />\n        </Div>\n      )}\n\n      {hoverFlag && (\n        <DeleteBox>\n          <DeleteButton\n            setCheckedArray={setCheckedArray}\n            checkedArray={checkedArray}\n            taskItems={taskItems}\n            index={index}\n            taskId={taskId}\n            setTaskItem={setTaskItem}\n          />\n        </DeleteBox>\n      )}\n    </Container>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  background-color: white;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2), 0 8px 0 -3px #f6f6f6, 0 9px 1px -3px rgba(0, 0, 0, 0.2), 0 16px 0 -6px #f6f6f6, 0 17px 2px -6px rgba(0, 0, 0, 0.2);\n}\n`;\n\nconst P = styled.div`\n  font-size: 15px;\n  padding: 10px;\n  cursor: ${(props) => (props.pointer ? `pointer` : `default`)};\n`;\n\nconst Index = ({\n  taskArray,\n  checkedArray,\n  setCheckedArray,\n  taskItems,\n  setTaskItem,\n}) => {\n  const deleteItems = () => {\n    const result = taskItems.filter((obj, i) =>\n      !checkedArray.includes(obj.taskId) ? true : false\n    );\n    setCheckedArray([]);\n    setTaskItem(result);\n  };\n\n  return (\n    <Container>\n      <P>{`${taskArray.length - checkedArray.length} items left`}</P>\n      {!!checkedArray.length && (\n        <P pointer onClick={() => deleteItems()}>\n          clear completed\n        </P>\n      )}\n    </Container>\n  );\n};\n\nexport default Index;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport InputField from \"../Atoms/InputField\";\nimport TaskItem from \"../Molecules/TaskItem\";\nimport Footer from \"../Atoms/Footer\";\n\nconst Container = styled.div`\n  max-width: 550px;\n  min-width: 250px;\n  margin: 0 auto;\n  font: 24px \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-weight: 100;\n`;\n\nconst Li = styled.li`\n  list-style: none;\n`;\n\nconst Index = () => {\n  const [taskItems, setTaskItem] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const taskArray = taskItems.map((obj, i) => {\n    const flag = checkedArray.includes(obj.taskId);\n\n    return (\n      <Li key={`${i}${JSON.stringify(obj)}`}>\n        <TaskItem\n          text={obj.text}\n          index={i}\n          taskId={obj.taskId}\n          checked={flag}\n          checkedArray={checkedArray}\n          setCheckedArray={setCheckedArray}\n          setTaskItem={setTaskItem}\n          taskItems={taskItems}\n        />\n      </Li>\n    );\n  });\n\n  return (\n    <Container>\n      <InputField\n        setTaskItem={(object) => {\n          setTaskItem(taskItems.concat(object));\n        }}\n      />\n      <ul>{taskArray}</ul>\n      {!!taskItems.length && (\n        <Footer\n          taskArray={taskArray}\n          checkedArray={checkedArray}\n          setCheckedArray={setCheckedArray}\n          taskItems={taskItems}\n          setTaskItem={setTaskItem}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default Index;\n","import React from \"react\";\nimport \"./App.css\";\nimport Title from \"./components/Atoms/Title\";\nimport MainContainer from \"./components/Organisms/MainContainer\";\n\nfunction App() {\n  return (\n    <div>\n      <Title />\n      <MainContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}